#!/bin/csh 

####################
#  job: MiscMasters.job
#
#  This job loads the miscellaneous internal feeds into vision.  The
#  MiscMasters token in status/pending should contain the file extension
#  to use for loading the misc files.
#
#  Environment Variables:
#     statusArea      /lv/production/status
#     feedFilePath    /lv/upload/feeds/
#     updateArea      /lv/production/Updates
#     processDate     current run date of daemon 
#     globalLogs      /lv/production/status/logs
#
#  The following Feeds are Loaded if Available:
#     Feed Name            File name in $feedFilePath
#     CurrencyMaster       CurrencyMaster.ext
#     CountryMaster        CountryMaster.ext
#     SectorMaster         SectorMaster.ext
#     IndustryMaster       IndustryMaster.ext
#     SecurityTypeMaster   SecTypeMaster.ext
#
#  Note: this job should be scheduled to run before security and holding
#   updates so that any new support instances are created first
####################

#----------
#  Setup
#----------

set jobName    = MiscMasters
set pending    = $statusArea/pending
set src        = $feedFilePath

#--  get the file extension from the pending token
set fileExt = `cat $pending/$jobName`

#--  Setup log
set workDir  = $updateArea/workArea/Internal
set processLog = $workDir/$jobName.$processDate
$adminArea/helpers/SetupLog $processLog

#----------
#  Load the Available MiscMasters Data
#----------

echo "" > $processLog
echo "********************************************************" >> $processLog
echo "*  Loading Miscellaneous Internal Data Feeds " >> $processLog
echo "*  Start Time: `date` " >> $processLog
echo "*  From:  $src " >> $processLog
echo "********************************************************" >> $processLog
echo "" >> $processLog

#---  start up a batchvision, run the feeds, and save the session
($DBbatchvision -U3) << EOD |& sed 's/V> //g' >>& $processLog
$processDate evaluate:
   [ newLine print ;
     !file <- "$src/CurrencyMaster.$fileExt" ;
     Interface BatchFeedManager   
          upload: "CurrencyMaster" usingFile: file withConfig: NA ;
     newLine print ;
     !file <- "$src/CountryMaster.$fileExt" ;
     Interface BatchFeedManager   
          upload: "CountryMaster" usingFile: file withConfig: NA ;
     newLine print ;
     !file <- "$src/SectorMaster.$fileExt" ;
     Interface BatchFeedManager   
          upload: "SectorMaster" usingFile: file withConfig: NA ;
     newLine print ;
     !file <- "$src/IndustryMaster.$fileExt" ;
     Interface BatchFeedManager   
          upload: "IndustryMaster" usingFile: file withConfig: NA ;
     newLine print ;
     !file <- "$src/SecTypeMaster.$fileExt" ;
     Interface BatchFeedManager   
          upload: "SecurityTypeMaster" usingFile: file withConfig: NA ;
     newLine print ;
   ] ;
?g
?t

Utility updateNetworkWithAnnotation: "$jobName Loads" ;
?g
?t

EOD

#----------
#  Wraup
#----------

#--  Check job completion status and log file to confirm update
set okay = $status
if ($okay == 0) then
   $adminArea/helpers/CheckLog $processLog $jobName 1
   set okay = $status
endif

#--  copy the log to global status area
cp $processLog $globalLogs/$jobName.log

#--  if okay, move data files to done
if ($okay == 0) then
    cd $src
    mv CurrencyMaster.$fileExt done
    mv CountryMaster.$fileExt done
    mv SectorMaster.$fileExt done
    mv IndustryMaster.$fileExt done
    mv SecTypeMaster.$fileExt done
endif

#----------
#  and exit 
#----------
exit $okay
